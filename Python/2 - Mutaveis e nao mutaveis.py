# -*- coding: utf-8 -*-
"""Gerenciamento de memória.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UgWyLVEIqf7Vm5R7HEG6GQYBNBGaOLXB
"""



"""**1ª aula** - Tipos mutáveis e não mutáveis

lista e valor

"""

a = 3     ### int
b = 3.0     ### float
c = 'hello'     ### str
d = [2, 3, 5, 8, 11]      ### list

"""**O que acontece quando alteramos a variável 'a' para a = 6 ?**

Resposta - no código ele muda o valor int para 6



*   int , bool, float, str e complex são imutáveis!


"""

print(a)

a = 6
print(a)

"""**Já no caso de lista (list), seu valor pode alterar:**"""

print(d)

d[3] = 7
print(d)

"""**Como a mutabilidade de objetos afeta a atribuição de variáveis?**

Se perceber bem afeta tanto a lista 'a' e 'b' porque na memória é a mesma lista ambas aponta para o mesmo endereçamento de variável:
"""

a = [3,4,5]
b = a
b[1] = 8
print(b)
print(a)

"""**Como a mutabilidade de objetos afeta a passagem de parâmetros para FUNÇÕES?**

O conteúdo da variável 'a' não vai ser afetada, após a execução da função:
"""

def g(x):
  x = 5
a = 3
g(a)
print(a)

"""**Funções com list:**"""

def h(lst):
  lst[0] = 5

  myList = [3, 6, 9, 12]
  h(myList)